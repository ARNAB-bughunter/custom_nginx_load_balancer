worker_processes 1;


events {
    worker_connections 1000;
}

http {
    # log_format upstream_time '$remote_addr - $remote_user [$time_local] '
    # '"$request" $status $body_bytes_sent '
    # 'rt=$request_time upstream_server="$upstream_addr" urt="$upstream_response_time"';
 
    # access_log /var/log/nginx/access.log upstream_time;

    upstream test_app_cluster {
        # least_conn;
        server test_app_1:7001;
        server test_app_2:7001;
        server test_app_3:7001;
    }


    server {
        listen 7000;
        resolver 127.0.0.11 valid=30s;

        proxy_read_timeout 10000;
        proxy_connect_timeout 10000;
        proxy_send_timeout 10000; 

    
        location / {
            set $backend "";

            
            access_by_lua_block {
                local http = require "resty.http"
                local httpc = http.new()
                
                
                local res, err = httpc:request_uri("http://server_app:7002/", {
                    method = "GET",
                    keepalive_timeout = 60,
                })

                if res and res.status == 200 then
                    ngx.var.backend = res.body:gsub('^"(.-)"$', "%1")
                else
                    ngx.var.backend = "default-backend.example.com:80"
                end
   
            }
            proxy_pass http://$backend;
        }

    }
}